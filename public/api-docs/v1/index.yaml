openapi: "3.0.0"
info:
  version: 1.0.0
  title: Reservation
  description: reservation service for restaurants
  license:
    name: MIT
servers:
  - url: https://petstore.swagger.io/v1
paths:
  /restaurants:
    get:
      summary: List all restaurants
      operationId: listRestaurants
      tags:
        - restaurants
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            maximum: 100
            format: int32
      responses:
        '200':
          description: A paged array of restaurants
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Restaurants"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /restaurants/{restaurantId}:
    get:
      summary: Info for a specific rest
      operationId: showRestaurantById
      tags:
        - restaurants
      parameters:
        - name: restaurantId
          in: path
          required: true
          description: The id of the restaurant to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Restaurant"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /reservation:
    post:
      summary: Create a reservation in restaurant
      operationId: createReservation
      tags:
        - reservations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Restaurant:
      type: object
      properties:
        restaurantId:
          type: integer
          format: int64
        description:
          type: string
    Restaurants:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/Restaurants"
    Pet:
      type: object
      required:
        - restaurantId
        - guestsNum
        - timeFrom
        - timeTo
      properties:
        restaurantId:
          type: integer
          format: int64
        guestsNum:
          type: integer
          format: int64
        timeFrom:
          type: string
        timeTo:
          type: string
    Pets:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/Pet"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string